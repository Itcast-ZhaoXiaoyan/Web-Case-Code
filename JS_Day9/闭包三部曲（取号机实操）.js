/*
首先，既反复使用局部变量，又避免全局污染，即为“闭包”
它的“三部曲”如下：
  （1）定义外层函数outer()，封装局部变量
  （2）定义内层函数inner()，对外层函数的局部变量执行操作
  （3）外层函数返回内层函数的对象，
  同时对外层函数进行调用，其结果返回赋值给一个全局变量中
*/

//1.定义外层函数outer()
function outer(){
  //1.封装局部变量n
    var n=1;
    
  //2.定义内层函数inner()
    function inner(){
    
    //2.执行外层函数局部变量的操作
        return n++;
    }
    
    //3.外层函数返回内层函数的对象
    return inner; 
}


//3.调用外层函数，并将其赋值给全局变量
var getNum=outer();
